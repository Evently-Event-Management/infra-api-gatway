server:
  port: 8088

spring:
  application:
    name: api-gateway

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://auth.ticketly.com:8080/realms/event-ticketing}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://auth.ticketly.com:8080/realms/event-ticketing/protocol/openid-connect/certs}
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: event_seating_service_route
              uri: ${EVENT_SEATING_SERVICE_URI:http://localhost:8081}
              predicates:
                - Path=/api/event-seating/**
            - id: event_query_service_route
              uri: ${EVENT_QUERY_SERVICE_URI:http://localhost:8082}
              predicates:
                - Path=/api/event-query/**
            - id: order_service_route
              uri: ${ORDER_SERVICE_URI:http://localhost:8084}
              predicates:
                - Path=/api/order/**
            - id: scheduler_service_route
              uri: ${SCHEDULER_SERVICE_URI:http://localhost:8085}
              predicates:
                - Path=/api/scheduler/**

# Detailed logging configuration for development
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    org.springframework.cloud.gateway: ${LOG_LEVEL_SPRING_CLOUD_GATEWAY:DEBUG}
    org.springframework.http.server.reactive: ${LOG_LEVEL_SPRING_HTTP_SERVER_REACTIVE:DEBUG}
    org.springframework.web.reactive: ${LOG_LEVEL_SPRING_WEB_REACTIVE:DEBUG}
    reactor.netty: ${LOG_LEVEL_REACTOR_NETTY:DEBUG}
    reactor.netty.http.client: ${LOG_LEVEL_REACTOR_NETTY_HTTP_CLIENT:DEBUG}
    org.springframework.security: ${LOG_LEVEL_SPRING_SECURITY:DEBUG}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
